import {IWorkerOptions, Node, Worker} from '@sora-soft/framework';
import {<%- workerNameEnum %>} from '<%- workerNameWorkerRelativePath %>';
import {AssertType} from 'typescript-is';

export interface I<%- upperCamelCaseWorkerName %>WorkerOptions extends IWorkerOptions {
}

class <%- upperCamelCaseWorkerName %>Worker extends Worker {
  static register() {
    Node.registerWorker(WorkerName.<%- upperCamelCaseWorkerName %>, (options: I<%- upperCamelCaseWorkerName %>WorkerOptions) => {
      return new <%- upperCamelCaseWorkerName %>Worker(<%- workerNameEnum %>.<%- upperCamelCaseWorkerName %>, options);
    });
  }

  constructor(name: string, @AssertType() options: I<%- upperCamelCaseWorkerName %>WorkerOptions) {
    super(name);
    this.options_ = options;
  }

  protected async startup() {}

  protected async shutdown() {}

  private options_: I<%- upperCamelCaseWorkerName %>WorkerOptions;
}

export {<%- upperCamelCaseWorkerName %>Worker}

